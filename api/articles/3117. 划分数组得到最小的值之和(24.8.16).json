{"title":"3117. 划分数组得到最小的值之和(24.8.16)","uid":"cb35c14b3d210d37d2666e2dab45b182","slug":"3117. 划分数组得到最小的值之和(24.8.16)","date":"2024-08-16T09:30:45.146Z","updated":"2024-09-04T11:35:34.023Z","comments":true,"path":"api/articles/3117. 划分数组得到最小的值之和(24.8.16).json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>今日题目太难，不做过分的解释，仅依据别人的代码进行学习，代码搬自：<a href=\"https://leetcode.cn/problems/minimum-sum-of-values-by-dividing-array/solutions/2739258/ji-yi-hua-sou-suo-jian-ji-xie-fa-by-endl-728z/\">灵茶山艾府</a></p>\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><blockquote>\n<p>给你两个数组 nums 和 andValues，长度分别为 n 和 m。</p>\n<p>数组的 值 等于该数组的 最后一个 元素。</p>\n<p>你需要将 nums 划分为 m 个 不相交的连续  子数组 ，对于第 ith 个子数组 [li, ri]，子数组元素的按位 AND运算结果等于 andValues[i]，换句话说，对所有的 1 &lt;&#x3D; i &lt;&#x3D; m，nums[li] &amp; nums[li + 1] &amp; … &amp; nums[ri] &#x3D;&#x3D; andValues[i] ，其中 &amp; 表示按位 AND 运算符。</p>\n<p>返回将 nums 划分为 m 个子数组所能得到的可能的 最小 子数组 值 之和。如果无法完成这样的划分，则返回 -1 。</p>\n</blockquote>\n<blockquote>\n<p>示例 1：</p>\n<p>输入： nums &#x3D; [1,4,3,3,2], andValues &#x3D; [0,3,3,2]</p>\n<p>输出： 12</p>\n<p>解释：</p>\n<p>唯一可能的划分方法为：</p>\n<p>[1,4] 因为 1 &amp; 4 &#x3D;&#x3D; 0 [3] 因为单元素子数组的按位 AND 结果就是该元素本身 [3] 因为单元素子数组的按位 AND<br>结果就是该元素本身 [2] 因为单元素子数组的按位 AND 结果就是该元素本身 这些子数组的值之和为 4 + 3 + 3 + 2 &#x3D; 12</p>\n</blockquote>\n<blockquote>\n<p>示例 2：</p>\n<p>输入： nums &#x3D; [2,3,5,7,7,7,5], andValues &#x3D; [0,7,5]</p>\n<p>输出： 17</p>\n<p>解释：</p>\n<p>划分 nums 的三种方式为：</p>\n<p>[[2,3,5],[7,7,7],[5]] 其中子数组的值之和为 5 + 7 + 5 &#x3D; 17 [[2,3,5,7],[7,7],[5]]<br>其中子数组的值之和为 7 + 7 + 5 &#x3D; 19 [[2,3,5,7,7],[7],[5]] 其中子数组的值之和为 7 + 7 + 5 &#x3D;<br>19 子数组值之和的最小可能值为 17</p>\n</blockquote>\n<blockquote>\n<p>示例 3：</p>\n<p>输入： nums &#x3D; [1,2,3,4], andValues &#x3D; [2]</p>\n<p>输出： -1</p>\n<p>解释：</p>\n<p>整个数组 nums 的按位 AND 结果为 0。由于无法将 nums 划分为单个子数组使得元素的按位 AND 结果为 2，因此返回 -1。</p>\n</blockquote>\n<blockquote>\n<p>提示：</p>\n<p>1 &lt;&#x3D; n &#x3D;&#x3D; nums.length &lt;&#x3D; 10^4<br> 1 &lt;&#x3D; m &#x3D;&#x3D; andValues.length &lt;&#x3D; min(n, 10)<br>1 &lt;&#x3D; nums[i] &lt; 10^5<br> 0 &lt;&#x3D; andValues[j] &lt; 10^5</p>\n</blockquote>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minimumValueSum</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, vector&lt;<span class=\"type\">int</span>&gt;&amp; andValues)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">const</span> <span class=\"type\">int</span> INF = INT_MAX / <span class=\"number\">2</span>; <span class=\"comment\">// 除 2 防止下面 + nums[i] 溢出</span></span><br><span class=\"line\">        <span class=\"type\">int</span> n = nums.<span class=\"built_in\">size</span>(), m = andValues.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        unordered_map&lt;<span class=\"type\">long</span> <span class=\"type\">long</span>, <span class=\"type\">int</span>&gt; memo;</span><br><span class=\"line\">        <span class=\"keyword\">auto</span> dfs = [&amp;](<span class=\"keyword\">auto</span>&amp;&amp; dfs, <span class=\"type\">int</span> i, <span class=\"type\">int</span> j, <span class=\"type\">int</span> and_) -&gt; <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n - i &lt; m - j) &#123; <span class=\"comment\">// 剩余元素不足</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> INF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j == m) &#123; <span class=\"comment\">// 分了 m 段</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> i == n ? <span class=\"number\">0</span> : INF;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            and_ &amp;= nums[i];</span><br><span class=\"line\">            <span class=\"comment\">// 三个参数压缩成一个 long long</span></span><br><span class=\"line\">            <span class=\"type\">long</span> <span class=\"type\">long</span> mask = (<span class=\"type\">long</span> <span class=\"type\">long</span>) i &lt;&lt; <span class=\"number\">36</span> | (<span class=\"type\">long</span> <span class=\"type\">long</span>) j &lt;&lt; <span class=\"number\">32</span> | and_;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (memo.<span class=\"built_in\">contains</span>(mask)) &#123; <span class=\"comment\">// 之前计算过</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> memo[mask];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"type\">int</span> res = <span class=\"built_in\">dfs</span>(dfs, i + <span class=\"number\">1</span>, j, and_); <span class=\"comment\">// 不划分</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (and_ == andValues[j]) &#123; <span class=\"comment\">// 划分，nums[i] 是这一段的最后一个数</span></span><br><span class=\"line\">                res = <span class=\"built_in\">min</span>(res, <span class=\"built_in\">dfs</span>(dfs, i + <span class=\"number\">1</span>, j + <span class=\"number\">1</span>, <span class=\"number\">-1</span>) + nums[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> memo[mask] = res; <span class=\"comment\">// 记忆化</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans = <span class=\"built_in\">dfs</span>(dfs, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">-1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans &lt; INF ? ans : <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"代码学习\"><a href=\"#代码学习\" class=\"headerlink\" title=\"代码学习\"></a>代码学习</h2><blockquote>\n<p><em><strong>1.auto dfs &#x3D; [&amp;](auto&amp;&amp; dfs, int i, int j, int and_) -&gt; int：</strong></em><br> 此处是一个lamada函数体，其基本语法如下：<br><code>cpp [捕获列表](参数列表) -&gt; 返回值类型 &#123; 函数体 &#125; </code><br><strong>捕获列表：</strong> 用于指定如何访问外部作用域中的变量。可以是值捕获（[a, b]）、引用捕获（[&amp;a, &amp;b]）或混合捕获。<br><strong>参数列表：</strong> 与普通函数的参数列表类似。<br><strong>返回值类型：</strong> 可以自动推导（如果函数体只有一个 return 语句），也可以显式指定。<br><strong>函数体：</strong> 包含具体的函数逻辑。</p>\n<p>在此代码当中，***[&amp;]*** 代表引用外部全部变量，其后的 <em><strong>auto&amp;&amp; dfs</strong></em> 使用了通用引用。这意味着它可以接受左值引用和右值引用，最后的  <em><strong>-&gt; int</strong></em> 表示其返回值为 <em><strong>int</strong></em> 类型</p>\n</blockquote>\n<blockquote>\n<p><em><strong>2. unordered_map</strong></em><br>unordered_map 是 C++ 标准库中的一种无序关联容器，用于高效地存储键值对并提供快速的查找、插入和删除操作。<br>以下是关于 unordered_map 的一些关键特点和用法：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> //1.插入元素：   </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> unordered_map</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> string</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> myMap</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> myMap</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">One</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">   </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> myMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">insert</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Two</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">&#125;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> //2.查找元素：   </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">myMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">count</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\">  </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 检查键是否存在</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">   string value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">myMap</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">];</span><span style=\"color: #F07178\">    </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> //3.删除元素：    </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">myMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">erase</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> //4.遍历元素：    </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">auto</span><span style=\"color: #BABED8\"> it </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> myMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">begin</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> it</span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> myMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">end</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\">it</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> key </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">it</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">first</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    string value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">it</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">second</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\">   </span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span></span></code></pre></div></blockquote>\n","feature":false,"text":"前言今日题目太难，不做过分的解释，仅依据别人的代码进行学习，代码搬自：灵茶山艾府 题目 给你两个数组 nums 和 andValues，长度分别为 n 和 m。...","permalink":"/post/3117. 划分数组得到最小的值之和(24.8.16)","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":25,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":25,"path":"api/tags/Tag.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0\"><span class=\"toc-text\">代码学习</span></a></li></ol>","author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"3117. 划分数组得到最小的值之和(24.8.16)","uid":"cb35c14b3d210d37d2666e2dab45b182","slug":"3137. K 周期字符串需要的最少操作次数（24.8.17）","date":"2024-08-17T03:24:30.321Z","updated":"2024-09-04T11:35:12.984Z","comments":true,"path":"api/articles/3137. K 周期字符串需要的最少操作次数（24.8.17）.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","text":"题目 给你一个长度为 n 的字符串 word 和一个整数 k ，其中 k 是 n 的因数。 在一次操作中，你可以选择任意两个下标 i 和 j，其中 0 <= i...","permalink":"/post/3137. K 周期字符串需要的最少操作次数（24.8.17）","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":25,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":25,"path":"api/tags/Tag.json"}],"author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"3148. 矩阵中的最大得分（24.8.15）","uid":"51765fc526760a8b2efb58a734309e35","slug":"3148. 矩阵中的最大得分（24.8.15）","date":"2024-08-15T09:20:12.824Z","updated":"2024-09-04T11:34:34.569Z","comments":true,"path":"api/articles/3148. 矩阵中的最大得分（24.8.15）.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","text":"题目 给你一个由 正整数 组成、大小为 m x n 的矩阵grid。你可以从矩阵中的任一单元格移动到另一个位于正下方或正右侧的任意单元格（不必相邻）。从值为 c...","permalink":"/post/3148. 矩阵中的最大得分（24.8.15）","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":25,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":25,"path":"api/tags/Tag.json"}],"author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"feature":false}}