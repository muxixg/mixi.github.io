{"title":"3144. 分割字符频率相等的最少子字符串（24.8.28）","uid":"b47e0977c91a3294eec04548018a37a6","slug":"3144. 分割字符频率相等的最少子字符串（24.8.28）","date":"2024-08-28T09:34:09.596Z","updated":"2024-09-04T11:35:07.711Z","comments":true,"path":"api/articles/3144. 分割字符频率相等的最少子字符串（24.8.28）.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><strong>题目</strong>：<br>给你一个字符串 <code>s</code> ，你需要将它分割成一个或者更多的平衡子字符串。 比方说，<code>s == &quot;ababcc&quot;</code> 那么 <code>(&quot;abab&quot;,&quot;c&quot;,&quot;c&quot;)</code> ，<code>(&quot;ab&quot;,&quot;abc&quot;,&quot;c&quot;)</code> 和 <code>(&quot;ababcc&quot;)</code> 都是合法分割，但是 <code>(&quot;a&quot;,&quot;bab&quot;,&quot;cc&quot;)</code> ， <code>(&quot;aba&quot;,&quot;bc&quot;,&quot;c&quot;)</code> 和 <code>(&quot;ab&quot;,&quot;abc&quot;)</code> 不是，不平衡的子字符串用粗体表示。</p>\n<p>请你返回 <code>s</code> 最少能分割成多少个平衡子字符串。</p>\n<p>注意：一个平衡字符串指的是字符串中所有字符出现的次数都相同。</p>\n<p><strong>示例 1</strong>：<br>输入：<code>s = &quot;fabccddg&quot;</code><br>输出：<code>3</code><br>解释：<br>我们可以将 <code>s</code> 分割成 3 个子字符串：<code>(&quot;fab&quot;,&quot;ccdd&quot;,&quot;g&quot;)</code> 或者 <code>(&quot;fabc&quot;,&quot;cd&quot;,&quot;dg&quot;)</code> 。</p>\n<p><strong>示例 2</strong>：<br>输入：<code>s = &quot;abababaccddb&quot;</code><br>输出：<code>2</code><br>解释：<br><strong>题目</strong>：<br>我们可以将 <code>s</code> 分割成 2 个子字符串：<code>(&quot;abab&quot;,&quot;abaccddb&quot;)</code> 。</p>\n<p>提示：</p>\n<ul>\n<li><code>1&lt;=s.length&lt;=1000</code></li>\n<li><code>s</code> 只包含小写英文字母。</li>\n</ul>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>见代码</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">要求求最小的分割数，那么就要求每个字串都要达到尽可能长的长度。可以从大到小枚举其长度， </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">minimumSubstringsInPartition</span><span class=\"params\">(string s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=s.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">cnt</span><span class=\"params\">(n)</span></span>;<span class=\"comment\">//用于记录遇到的长度</span></span><br><span class=\"line\">        <span class=\"comment\">//由大到小枚举 子串的长度 </span></span><br><span class=\"line\">        <span class=\"keyword\">auto</span> dfs = [&amp;](<span class=\"keyword\">auto</span>&amp;&amp; dfs, <span class=\"type\">int</span> i) -&gt; <span class=\"type\">int</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i&lt;<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//因为长度不可能小于0</span></span><br><span class=\"line\">            <span class=\"type\">int</span>&amp; ans=cnt[i];<span class=\"comment\">//将ans初始化为对应i长度的记录值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ans) <span class=\"keyword\">return</span> ans;<span class=\"comment\">//如果此长度及路过就不在继续</span></span><br><span class=\"line\">            ans=INT_MAX;<span class=\"comment\">//由于是求最小值，九江ans初始化为最大的值，以便于后面的ans值的更新</span></span><br><span class=\"line\">            <span class=\"type\">int</span> h[<span class=\"number\">26</span>]&#123;&#125;;<span class=\"comment\">//建立字母的哈希值进行对字母的统计,用于判断是否满足平衡的概念</span></span><br><span class=\"line\">            <span class=\"type\">int</span> k=<span class=\"number\">0</span>;<span class=\"comment\">//统计不同字符的个数</span></span><br><span class=\"line\">            <span class=\"type\">int</span> max_h=<span class=\"number\">0</span>;<span class=\"comment\">//最大的字符个数</span></span><br><span class=\"line\">            <span class=\"comment\">//从第 i 小标开始向前查看这个子串是否满足</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=i;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                k+=(h[s[j]-<span class=\"string\">&#x27;a&#x27;</span>]++==<span class=\"number\">0</span>);<span class=\"comment\">//统计不同字符的个数</span></span><br><span class=\"line\">                max_h = <span class=\"built_in\">max</span>(max_h, h[s[j] - <span class=\"string\">&#x27;a&#x27;</span>]);<span class=\"comment\">//最大的字符个数</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//子集当中字符个数（暂写为 a） i - j + 1</span></span><br><span class=\"line\">                <span class=\"comment\">//假设其是平衡的 那么其个数是（暂写为 b） k * max_h</span></span><br><span class=\"line\">                <span class=\"comment\">//如果 a==b 则说明满足条件，那么将ans更新为最小值</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i - j + <span class=\"number\">1</span> == k * max_h)&#123;</span><br><span class=\"line\">                    ans=<span class=\"built_in\">min</span>(ans,<span class=\"built_in\">dfs</span>(dfs,j<span class=\"number\">-1</span>)<span class=\"number\">+1</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//再去深搜下一个长度是否满足 再加上此子集的个数 1</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">dfs</span>(dfs,n<span class=\"number\">-1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","feature":false,"text":"题目题目：给你一个字符串 s ，你需要将它分割成一个或者更多的平衡子字符串。 比方说，s == \"ababcc\" 那么 (\"abab\",\"c\",\"c\") ，(\"...","permalink":"/post/3144. 分割字符频率相等的最少子字符串（24.8.28）","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":23,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":23,"path":"api/tags/Tag.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li></ol>","author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"142. 判断矩阵是否满足条件（24.8.29）","uid":"32a2a21e126367c44904ea628e1e3188","slug":"142. 判断矩阵是否满足条件（24.8.29）","date":"2024-08-29T12:47:24.409Z","updated":"2024-09-04T11:32:58.238Z","comments":true,"path":"api/articles/142. 判断矩阵是否满足条件（24.8.29）.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","text":"题目给你一个大小为 m×n 的二维矩阵 grid 。你需要判断每一个格子 grid[i][j] 是否满足: 如果它下面的格子存在，那么它需要等于它下面的格子，也...","permalink":"/post/142. 判断矩阵是否满足条件（24.8.29）","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":23,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":23,"path":"api/tags/Tag.json"}],"author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"3134. 找出唯一性数组的中位数（24.8.27）","uid":"63e43b7253423aa57a51b39a198e62b6","slug":"3134. 找出唯一性数组的中位数（24.8.27）","date":"2024-08-27T13:41:20.004Z","updated":"2024-09-04T11:35:18.120Z","comments":true,"path":"api/articles/3134. 找出唯一性数组的中位数（24.8.27）.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","text":"前言本次通过学习 灵茶山艾府 的代码进行解题研究 题目题目描述： 给你一个整数数组 nums 。数组 nums 的唯一性数组是一个按元素从小到大排序的数组，包含...","permalink":"/post/3134. 找出唯一性数组的中位数（24.8.27）","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":23,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":23,"path":"api/tags/Tag.json"}],"author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"feature":false}}