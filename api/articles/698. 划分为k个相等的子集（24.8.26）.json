{"title":"698. 划分为k个相等的子集（24.8.26）","uid":"12bdcd1d7f4735436cddbaffefc6bba4","slug":"698. 划分为k个相等的子集（24.8.26）","date":"2024-08-25T16:00:37.016Z","updated":"2024-09-04T11:36:07.931Z","comments":true,"path":"api/articles/698. 划分为k个相等的子集（24.8.26）.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><strong>题目</strong>：<br>给定一个整数数组 <code>nums</code> 和一个正整数 <code>k</code> ，找出是否有可能把这个数组分成 <code>k</code> 个非空子集，其总和都相等。</p>\n<p><strong>示例 1</strong>：<br>输入：<code>nums=[4,3,2,3,5,2,1]</code>，<code>k=4</code><br>输出：<code>True</code><br>说明：有可能将其分成 4 个子集 <code>(5)</code>，<code>(1,4)</code>，<code>(2,3)</code>，<code>(2,3)</code> 等于总和。</p>\n<p><strong>示例 2</strong>：<br>输入：<code>nums =[1,2,3,4]</code>，<code>k=3</code><br>输出：<code>False</code></p>\n<p><strong>提示</strong>：</p>\n<ul>\n<li><code>1&lt;=k&lt;= len( nums )&lt;=16</code></li>\n<li><code>0&lt;nums[i]&lt;10000</code></li>\n<li>每个元素的频率在 <code>[1,4]</code> 范围内</li>\n</ul>\n<h2 id=\"解题思路（一些注意点放在代码当中）\"><a href=\"#解题思路（一些注意点放在代码当中）\" class=\"headerlink\" title=\"解题思路（一些注意点放在代码当中）\"></a>解题思路（一些注意点放在代码当中）</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">###</span><br><span class=\"line\">（<span class=\"number\">1</span>）题目要求能将 nums 划分为 k 个和相同的子集，这一点说明了 nums 当中的和( sum )是 k 的正整数。</span><br><span class=\"line\">（<span class=\"number\">2</span>）在（<span class=\"number\">1</span>）的前提下，假设 nums 能够成立，那么就存在 k 个子集，问题就变成了向这 k 个自己当中填数，</span><br><span class=\"line\">使其满足和为  sum/k（下方记作 sum ，表示每个集合的值）</span><br><span class=\"line\">（<span class=\"number\">3</span>）从第一个数开始 向 第 i 个自己当中填入这个数，如果这个数填入后大于 sum，则不可以填入 这个值，</span><br><span class=\"line\">相应的回溯减去这个值，转而尝试将下一个数填入其中</span><br></pre></td></tr></table></figure>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">canPartitionKSubsets</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"type\">int</span> sum = <span class=\"built_in\">accumulate</span>(nums.<span class=\"built_in\">begin</span>(), nums.<span class=\"built_in\">end</span>(), <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sum%k) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;<span class=\"comment\">//不能被整除，说明无法被分成 k 份</span></span><br><span class=\"line\">        sum/=k;</span><br><span class=\"line\">        <span class=\"built_in\">sort</span>(nums.<span class=\"built_in\">begin</span>(),nums.<span class=\"built_in\">end</span>(),<span class=\"built_in\">greater</span>&lt;<span class=\"type\">int</span>&gt;());<span class=\"comment\">//此处由大到小，可以实现剪枝的目的</span></span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">zu</span><span class=\"params\">(k)</span></span>;</span><br><span class=\"line\">        function&lt;<span class=\"type\">bool</span>(<span class=\"type\">int</span>)&gt; dfs=[&amp;](<span class=\"type\">int</span> index)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(index==n) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;<span class=\"comment\">//已经分配完了，说明成立</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i&amp;&amp;zu[i]==zu[i<span class=\"number\">-1</span>]) <span class=\"keyword\">continue</span>;<span class=\"comment\">//防止 i 越界，同时当两组集合达到相同值时也说明达到了目标数</span></span><br><span class=\"line\">                        zu[i]+=nums[index];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(zu[i]&lt;=sum&amp;&amp;<span class=\"built_in\">dfs</span>(index<span class=\"number\">+1</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    zu[i]-=nums[index];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">dfs</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","feature":false,"text":"题目题目：给定一个整数数组 nums 和一个正整数 k ，找出是否有可能把这个数组分成 k 个非空子集，其总和都相等。 示例 1：输入：nums=[4,3,2,...","permalink":"/post/698. 划分为k个相等的子集（24.8.26）","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":25,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":25,"path":"api/tags/Tag.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF%EF%BC%88%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E7%82%B9%E6%94%BE%E5%9C%A8%E4%BB%A3%E7%A0%81%E5%BD%93%E4%B8%AD%EF%BC%89\"><span class=\"toc-text\">解题思路（一些注意点放在代码当中）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li></ol>","author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"690. 员工的重要性（24.8.26）","uid":"02a34e1e4a78b84dd421c121c20c981e","slug":"690. 员工的重要性（24.8.26）","date":"2024-08-26T08:53:00.199Z","updated":"2024-09-04T11:36:12.905Z","comments":true,"path":"api/articles/690. 员工的重要性（24.8.26）.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","text":"题目题目描述： 你拥有一个用于保存员工信息的数据结构，其中包含员工唯一的id、重要度以及直系下属的id。 给定一个员工数组employees，其中： emplo...","permalink":"/post/690. 员工的重要性（24.8.26）","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":25,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":25,"path":"api/tags/Tag.json"}],"author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"3146. 两个字符串的排列差（24.8.24）","uid":"3ce3d18d242af69716fd71eef0e0c088","slug":"3146. 两个字符串的排列差（24.8.24）","date":"2024-08-23T16:46:44.011Z","updated":"2024-09-04T11:34:39.871Z","comments":true,"path":"api/articles/3146. 两个字符串的排列差（24.8.24）.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2024/09/04/9813f071f456e3ba.png","text":" 附：本体力扣个人解题链接 题目给你两个字符串 s 和 t，每个字符串中的字符都不重复，且 t 是 s 的一个排列。 排列差定义为 s 和 t 中每个字符在两个...","permalink":"/post/3146. 两个字符串的排列差（24.8.24）","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"力扣每日一题 - Cate","slug":"力扣每日一题-Cate","count":25,"path":"api/categories/力扣每日一题-Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":25,"path":"api/tags/Tag.json"}],"author":{"name":"木兮xg","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2024/07/30/a1a842c36ee5df76.jpg","link":"/","description":"花有重开日，人无再少年。相逢拌酩酊，何必备芳鲜。","socials":{"github":"https://github.com/muxixg","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_60624992","juejin":"","customs":{}}},"feature":false}}